--[[ BloodyEggGUI by Blood.lust (@terist999) Version: Final July 2025 - Egg Detector Update Features: - Bloody UI with ðŸ…±ï¸� Toggle - Dropdown pet selector per egg - Displays predicted pet above egg - Randomize button with 10s cooldown + timer UI - Realistic shrinkable ðŸ…±ï¸� toggle GUI - Kill switch + version check - Animation prediction (floating pet name) - Full v1.12.0 Egg/Pet Database support ]]-- local HttpService = game:GetService("HttpService") local Players = game:GetService("Players") local ReplicatedStorage = game:GetService("ReplicatedStorage") local TweenService = game:GetService("TweenService") local player = Players.LocalPlayer -- Version check local VERSION = "1.0.0" local VERSION_URL = "https://raw.githubusercontent.com/terist999/GrowAGardenBloodHub/main/version.txt" local success, response = pcall(function() return game:HttpGet(VERSION_URL) end) if success and response and response ~= VERSION then warn("Outdated BloodyEggGUI. Please update.") return end -- Kill switch local KILL_URL = "https://raw.githubusercontent.com/terist999/GrowAGardenBloodHub/main/killswitch.txt" local kill, resp = pcall(function() return game:HttpGet(KILL_URL) end) if kill and resp and resp:lower():match("true") then warn("BloodyEggGUI has been disabled by the developer.") return end -- Egg database local EggPets = { ["Common Egg"] = {"Dog", "Bunny", "Golden Lab"}, ["Uncommon Egg"] = {"Black Bunny", "Chicken", "Cat", "Deer"}, ["Bug Egg"] = {"Snail", "Giant Ant", "Caterpillar", "Praying Mantis", "Dragonfly"}, ["Bee Egg"] = {"Bee", "Honey Bee", "Bear Bee", "Petal Bee", "Queen Bee"}, ["Common Summer Egg"] = {"Starfish", "Seagull", "Crab"}, ["Rare Summer Egg"] = {"Flamingo", "Toucan", "Sea Turtle", "Orangutan", "Seal"}, ["Paradise Egg"] = {"Ostrich", "Peacock", "Capybara", "Scarlet Macaw", "Mimic Octopus"}, ["Mythical Egg"] = {"Grey Mouse", "Brown Mouse", "Squirrel", "Red Giant Ant", "Red Fox"}, ["Anti Bee Egg"] = {"Wasp", "Tarantula Hawk", "Moth", "Butterfly", "Disco Bee"}, ["Oasis Egg"] = {"Meerkat", "Sand Snake", "Axolotl", "Hyacinth Macaw", "Fennec Fox"}, ["Dinosaur Egg"] = {"Triceratops", "Raptor", "Stegosaurus", "Pterodactyl", "Brontosaurus", "T-Rex"}, ["Rare Egg"] = {"Orange Tabby", "Spotted Deer", "Pig", "Rooster", "Monkey"}, ["Legendary Egg"] = {"Cow", "Silver Monkey", "Sea Otter", "Turtle", "Polar Bear"}, ["Night Egg"] = {"Hedgehog", "Mole", "Frog", "Echo Frog", "Night Owl", "Raccoon"} } -- Floating animation effect local function animateAboveEgg(part, petName) local bill = Instance.new("BillboardGui", part) bill.Size = UDim2.new(0, 200, 0, 50) bill.StudsOffset = Vector3.new(0, 3, 0) bill.AlwaysOnTop = true local text = Instance.new("TextLabel", bill) text.Size = UDim2.new(1, 0, 1, 0) text.BackgroundTransparency = 1 text.Text = petName text.Font = Enum.Font.GothamBold text.TextScaled = true text.TextColor3 = Color3.fromRGB(255, 100, 100) local tween = TweenService:Create(bill, TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { StudsOffset = Vector3.new(0, 6, 0) }) tween:Play() game.Debris:AddItem(bill, 2) end -- Egg detection and prediction workspace.ChildAdded:Connect(function(obj) if obj:IsA("Part") and obj.Name:lower():find("egg") then task.wait(0.3) for eggType, pets in pairs(EggPets) do if obj.Name:lower():find(eggType:lower():gsub(" egg", "")) then local pet = pets[math.random(1, #pets)] animateAboveEgg(obj, pet) end end end end)
